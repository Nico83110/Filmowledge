@prefix xsd:     <http://www.w3.org/2001/XMLSchema#>.
@prefix sd:      <http://www.w3.org/ns/sparql-service-description#>.
@prefix frmt:    <http://www.w3.org/ns/formats/>.
@prefix dct:     <http://purl.org/dc/terms/>.
@prefix shacl:   <http://www.w3.org/ns/shacl#>.
@prefix void:    <http://rdfs.org/ns/void#>.
@prefix hydra:   <http://www.w3.org/ns/hydra/core#>.
@prefix schema:  <http://schema.org/>.
@prefix skos:    <http://www.w3.org/2004/02/skos/core#>.
@prefix sms:     <http://ns.inria.fr/sparql-micro-service#>.

@base            <http://example.org/sparql-ms/flickr/getPhotoById_sd/>.

# This file is loaded as graph <ServiceDescription>
<>
    a sd:Service, sms:Service;
    sd:endpoint <>;
    sd:supportedLanguage sd:SPARQL11Query;
    sd:feature sd:BasicFederatedQuery, sd:EmptyGraphs;
    sd:resultFormat frmt:SPARQL_Results_XML, frmt:SPARQL_Results_JSON, frmt:SPARQL_Results_CSV, frmt:SPARQL_Results_TSV,
                    frmt:RDF_XML, frmt:Turtle, frmt:JSON-LD, frmt:Trig;
    schema:name "Retrieve a photo from Flickr using its internal identifier";
    schema:description '''This service retrieves a photo from <a href="https://flickr.com" target="_new">Flickr</a> using its internal identifier. It takes as input a photo name identifier provided using property schema:identifier. It is meant to dereference photo URIs produced in the other Flickr SPARQL micro-serices, but can also be used with SPARQL.<br>
    Each photo is represented by an instance of the schema:Photograph, that provides a title (schema:name), a description (schema:description), a link to the photo file in medium size (schema:contentUrl) and its format (schema:fileFormat), a square thumbnail (schema:thumbnailUrl), the author and its web page (schema:author), and the URL of the photo Web page (schema:mainEntityOfPage).''';
    
    sd:defaultDataset [
        a sd:Dataset, void:Dataset;
        sd:defaultGraph [ a sd:Graph; shacl:shapesGraph <ShapesGraph> ];
        sd:namedGraph   [ a sd:Graph; sd:name <ServiceDescription> ];
        sd:namedGraph   [ a sd:Graph; sd:name <ShapesGraph> ];
        
        void:vocabulary <http://schema.org/>, <http://www.w3.org/ns/shacl#>, <http://www.w3.org/ns/hydra/core#>;
        void:sparqlEndpoint <>;
    ];

    schema:keywords "photography", "flickr", "photo", "picture", "snapshot";
    schema:publisher [ a schema:Organization;
        schema:name "Université Côte d'Azur, CNRS, Inria, I3S";
        schema:logo
            "http://univ-cotedazur.fr/fr/university/communication-presse/charte-et-logos/logo/png/uca-logo-large",
            "https://iww.inria.fr/dircom/logoinria-eng.png",
            "http://www.cnrs.fr/themes/custom/cnrs/logo.svg";
        schema:contactPoint [ a schema:ContactPoint;
            schema:contactType "technical support";
            schema:name "Franck Michel";
            schema:email "franck.michel@cnrs.fr";
            schema:url <https://w3id.org/people/franckmichel>;
        ];
    ];

    sms:exampleQuery '''
    prefix schema: <http://schema.org/>

    SELECT * WHERE {
        ?photo
            a                   schema:Photograph;
            schema:identifier   "31173091626";
            schema:name         ?name;
            schema:contentUrl   ?url.
    }
    ''';
    sms:exampleURI "http://example.org/ld/flickr/photo/31173091626";

    # 432000s = 5 days
    sms:cacheExpiresAfter "P432000S"^^xsd:duration;

    # Add provenance information to the graph generated at each invocation?
    sms:addProvenance "true"^^xsd:boolean;
    
    dct:source [
        a schema:WebAPI; schema:name "Flickr API";
        schema:url <https://www.flickr.com/services/api/>;
        schema:potentialAction <APIService>;
    ];
    .

# Web API service being wrapped by this µ-service + parameters binding
<APIService>
    a schema:SearchAction;
    a hydra:IriTemplate;
    hydra:mapping [
        hydra:variable "photo_id";
        schema:description "Flickr's internal photo identifier.";
        hydra:required "true"^^xsd:boolean;
        skos:example "37947618735";
        hydra:property schema:identifier;
    ].
