@prefix xsd:     <http://www.w3.org/2001/XMLSchema#>.
@prefix owl:     <http://www.w3.org/2002/07/owl#>.
@prefix skos:    <http://www.w3.org/2004/02/skos/core#>.
@prefix schema:  <http://schema.org/>.
@prefix sms:     <http://ns.inria.fr/sparql-micro-service#>.

sms:Service
    rdfs:subClassOf schema:Service;
    schema:name "SPARQL micro-service";
    schema:description "The class of SPARQL micro-services";
    .

sms:addProvenance a owl:DatatypeProperty;
    schema:name "add provenance information";
    schema:description "When turned on (true), the SPARQL micro-service will generate provenance triples along with the triples generated from the Web API response";
    skos:example "true"^^xsd:boolean;
    .
    
sms:cacheExpiresAfter a owl:DatatypeProperty;
    schema:name "cache expiration time";
    schema:description "Maximum time (in seconds) to cache responses from the Web API wrapped by a SPARQL micro-service";
    skos:example "P2592000S"^^xsd:duration;
    .

sms:exampleQuery rdfs:subPropertyOf skos:example;
    schema:name "example SPARQL query";
    schema:description "An example of SPARQL query that can be answered by the SPARQL micro-service";
    skos:example "SELECT * WHERE { ?s schema:keyword "sunrise". }";
    .

sms:exampleURI rdfs:subPropertyOf skos:example;
    schema:name "example deferenceable URI";
    schema:description "An example of URI that can be deferenced (resolved to RDF content) using the SPARQL micro-service";
    .

sms:passMultipleValuesAsCsv a owl:DatatypeProperty;
    schema:name "Strategy for passing service arguments to Web API";
    schema:description "How an argument of the SPARQL micro-service with a multiple values is passed to the Web API: 'true' means it is passed as a comma-separated value, 'false' means the Web API is invoked once for each value. Default: true";
    skos:example "true"^^xsd:boolean;
    .
